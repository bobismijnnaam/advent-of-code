<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="454" onload="init(evt)" viewBox="0 0 1200 454" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA[var details, searchbtn, matchedtxt, svg;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}
// mouse-over for info
function s(node) {		// show
    info = g_to_text(node);
    details.nodeValue = nametype + " " + info;
}
function c() {			// clear
    details.nodeValue = ' ';
}
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
})
// functions
function find_child(parent, name, attr) {
    var children = parent.childNodes;
    for (var i=0; i<children.length;i++) {
        if (children[i].tagName == name)
            return (attr != undefined) ? children[i].attributes[attr].value : children[i];
    }
    return;
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_"+attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_"+attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_"+attr].value;
    e.removeAttribute("_orig_"+attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes["width"].value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;
    // Smaller than this size won't fit anything
    if (w < 2*fontsize*fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x=txt.length-2; x>0; x--) {
        if (t.getSubStringLength(0, x+2) <= w) {
            t.textContent = txt.substring(0,x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i=0, c=e.childNodes; i<c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes["x"] != undefined) {
            orig_save(e, "x");
            e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
        }
        if (e.attributes["width"] != undefined) {
            orig_save(e, "width");
            e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i=0, c=e.childNodes; i<c.length; i++) {
        zoom_child(c[i], x-xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes["x"] != undefined) {
            orig_save(e, "x");
            e.attributes["x"].value = xpad;
        }
        if (e.attributes["width"] != undefined) {
            orig_save(e, "width");
            e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i=0, c=e.childNodes; i<c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr["width"].value);
    var xmin = parseFloat(attr["x"].value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr["y"].value);
    var ratio = (svg.width.baseVal.value - 2*xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    var unzoombtn = document.getElementById("unzoom");
    unzoombtn.style["opacity"] = "1.0";
    var el = document.getElementsByTagName("g");
    for(var i=0;i<el.length;i++){
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a["x"].value);
        var ew = parseFloat(a["width"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a["y"].value) > ymin;
        } else {
            var upstack = parseFloat(a["y"].value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.style["opacity"] = "0.5";
                zoom_parent(e);
                e.onclick = function(e){unzoom(); zoom(this);};
                update_text(e);
            }
            // not in current path
            else
                e.style["display"] = "none";
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.style["display"] = "none";
            }
            else {
                zoom_child(e, xmin, ratio);
                e.onclick = function(e){zoom(this);};
                update_text(e);
            }
        }
    }
}
function unzoom() {
    var unzoombtn = document.getElementById("unzoom");
    unzoombtn.style["opacity"] = "0.0";
    var el = document.getElementsByTagName("g");
    for(i=0;i<el.length;i++) {
        el[i].style["display"] = "block";
        el[i].style["opacity"] = "1";
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.getElementsByTagName("rect");
    for (var i=0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.style["opacity"] = "0.1";
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.style["opacity"] = "0.0";
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementsByTagName("g");
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        if (e.attributes["class"].value != "func_g")
            continue;
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (rect == null) {
            // the rect might be wrapped in an anchor
            // if nameattr href is being used
            if (rect = find_child(e, "a")) {
                rect = find_child(r, "rect");
            }
        }
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes["width"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes["x"].value);
            orig_save(rect, "fill");
            rect.attributes["fill"].value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.style["opacity"] = "1.0";
    searchbtn.firstChild.nodeValue = "Reset Search"
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.style["opacity"] = "1.0";
    pct = 100 * count / maxwidth;
    if (pct == 100)
        pct = "100"
    else
        pct = pct.toFixed(1)
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function searchover(e) {
    searchbtn.style["opacity"] = "1.0";
}
function searchout(e) {
    if (searching) {
        searchbtn.style["opacity"] = "1.0";
    } else {
        searchbtn.style["opacity"] = "0.1";
    }
}
]]></script><rect x="0" y="0" width="1200" height="454" fill="url(#background)"/><text text-anchor="middle" x="600.00" y="24.00" font-size="17" font-family="Verdana" fill="rgb(0, 0, 0)">Flame Graph</text><text id="details" text-anchor="left" x="10.00" y="437.00" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"> </text><text id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" text-anchor="left" x="10.00" y="24.00" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">Reset Zoom</text><text id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" text-anchor="left" x="1090.00" y="24.00" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">Search</text><text id="matched" text-anchor="left" x="1090.00" y="437.00" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"> </text><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>[[kernel.kallsyms]] (1 samples, 0.07%)</title><rect x="10" y="373" width="0" height="15" fill="rgb(252,114,12)"/><text text-anchor="left" x="13.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_int_free (1 samples, 0.07%)</title><rect x="10" y="357" width="0" height="15" fill="rgb(220,213,13)"/><text text-anchor="left" x="13.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="10" y="357" width="1" height="15" fill="rgb(212,145,13)"/><text text-anchor="left" x="13.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>[day18] (2 samples, 0.14%)</title><rect x="10" y="373" width="2" height="15" fill="rgb(206,160,31)"/><text text-anchor="left" x="13.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___libc_free (1 samples, 0.07%)</title><rect x="11" y="357" width="1" height="15" fill="rgb(240,184,38)"/><text text-anchor="left" x="14.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="12" y="357" width="1" height="15" fill="rgb(243,138,4)"/><text text-anchor="left" x="15.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (38 samples, 2.59%)</title><rect x="13" y="357" width="30" height="15" fill="rgb(246,182,9)"/><text text-anchor="left" x="16.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;s..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___libc_free (3 samples, 0.20%)</title><rect x="43" y="357" width="3" height="15" fill="rgb(214,92,35)"/><text text-anchor="left" x="46.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___libc_malloc (2 samples, 0.14%)</title><rect x="46" y="357" width="1" height="15" fill="rgb(209,22,34)"/><text text-anchor="left" x="49.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_fini (1 samples, 0.07%)</title><rect x="47" y="357" width="1" height="15" fill="rgb(241,32,1)"/><text text-anchor="left" x="50.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (1 samples, 0.07%)</title><rect x="47" y="341" width="1" height="15" fill="rgb(223,16,32)"/><text text-anchor="left" x="50.00" y="351.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_int_free (2 samples, 0.14%)</title><rect x="48" y="357" width="2" height="15" fill="rgb(214,78,32)"/><text text-anchor="left" x="51.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_int_malloc (3 samples, 0.20%)</title><rect x="50" y="357" width="2" height="15" fill="rgb(225,73,53)"/><text text-anchor="left" x="53.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>day18::Maze::optimize (3 samples, 0.20%)</title><rect x="52" y="181" width="3" height="15" fill="rgb(227,157,3)"/><text text-anchor="left" x="55.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.20%)</title><rect x="52" y="165" width="3" height="15" fill="rgb(236,48,32)"/><text text-anchor="left" x="55.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___libc_free (2 samples, 0.14%)</title><rect x="81" y="149" width="2" height="15" fill="rgb(228,141,54)"/><text text-anchor="left" x="84.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_int_free (2 samples, 0.14%)</title><rect x="81" y="133" width="2" height="15" fill="rgb(252,215,38)"/><text text-anchor="left" x="84.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>malloc_consolidate (2 samples, 0.14%)</title><rect x="81" y="117" width="2" height="15" fill="rgb(241,25,3)"/><text text-anchor="left" x="84.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___libc_malloc (5 samples, 0.34%)</title><rect x="83" y="149" width="4" height="15" fill="rgb(217,194,14)"/><text text-anchor="left" x="86.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_int_malloc (3 samples, 0.20%)</title><rect x="84" y="133" width="3" height="15" fill="rgb(205,202,2)"/><text text-anchor="left" x="87.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___libc_malloc (1 samples, 0.07%)</title><rect x="99" y="133" width="1" height="15" fill="rgb(247,29,51)"/><text text-anchor="left" x="102.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__memcpy_avx_unaligned (28 samples, 1.91%)</title><rect x="100" y="133" width="22" height="15" fill="rgb(242,136,54)"/><text text-anchor="left" x="103.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">_..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__rdl_alloc (1 samples, 0.07%)</title><rect x="122" y="133" width="1" height="15" fill="rgb(205,77,19)"/><text text-anchor="left" x="125.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::sys::unix::alloc::&lt;impl core::alloc::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.07%)</title><rect x="122" y="117" width="1" height="15" fill="rgb(226,88,38)"/><text text-anchor="left" x="125.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="123" y="133" width="1" height="15" fill="rgb(239,70,17)"/><text text-anchor="left" x="126.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (3 samples, 0.20%)</title><rect x="156" y="117" width="3" height="15" fill="rgb(235,53,51)"/><text text-anchor="left" x="159.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.07%)</title><rect x="158" y="101" width="1" height="15" fill="rgb(241,118,21)"/><text text-anchor="left" x="161.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::map::make_hash (1 samples, 0.07%)</title><rect x="158" y="85" width="1" height="15" fill="rgb(248,154,10)"/><text text-anchor="left" x="161.00" y="95.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.14%)</title><rect x="159" y="117" width="1" height="15" fill="rgb(241,181,46)"/><text text-anchor="left" x="162.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___libc_realloc (2 samples, 0.14%)</title><rect x="159" y="101" width="1" height="15" fill="rgb(219,152,27)"/><text text-anchor="left" x="162.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_int_realloc (2 samples, 0.14%)</title><rect x="159" y="85" width="1" height="15" fill="rgb(228,66,46)"/><text text-anchor="left" x="162.00" y="95.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_int_malloc (2 samples, 0.14%)</title><rect x="159" y="69" width="1" height="15" fill="rgb(254,27,30)"/><text text-anchor="left" x="162.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>malloc_consolidate (1 samples, 0.07%)</title><rect x="159" y="53" width="1" height="15" fill="rgb(246,200,1)"/><text text-anchor="left" x="162.00" y="63.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::map::make_hash (44 samples, 3.00%)</title><rect x="160" y="117" width="36" height="15" fill="rgb(243,150,48)"/><text text-anchor="left" x="163.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">has..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (32 samples, 2.18%)</title><rect x="170" y="101" width="26" height="15" fill="rgb(253,107,39)"/><text text-anchor="left" x="173.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (75 samples, 5.12%)</title><rect x="242" y="101" width="61" height="15" fill="rgb(212,201,1)"/><text text-anchor="left" x="245.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;std::..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::map::make_hash (22 samples, 1.50%)</title><rect x="304" y="85" width="18" height="15" fill="rgb(242,91,44)"/><text text-anchor="left" x="307.00" y="95.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (18 samples, 1.23%)</title><rect x="308" y="69" width="14" height="15" fill="rgb(241,32,32)"/><text text-anchor="left" x="311.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>day18::Maze::get_new_reachable_keys (247 samples, 16.86%)</title><rect x="124" y="133" width="199" height="15" fill="rgb(246,176,9)"/><text text-anchor="left" x="127.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">day18::Maze::get_new_reach..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry (158 samples, 10.78%)</title><rect x="196" y="117" width="127" height="15" fill="rgb(248,30,30)"/><text text-anchor="left" x="199.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">hashbrown::rust..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (25 samples, 1.71%)</title><rect x="303" y="101" width="20" height="15" fill="rgb(215,122,26)"/><text text-anchor="left" x="306.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::raw::RawTable&lt;T&gt;::try_with_capacity (1 samples, 0.07%)</title><rect x="322" y="85" width="1" height="15" fill="rgb(241,214,19)"/><text text-anchor="left" x="325.00" y="95.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___libc_malloc (1 samples, 0.07%)</title><rect x="322" y="69" width="1" height="15" fill="rgb(224,136,39)"/><text text-anchor="left" x="325.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.41%)</title><rect x="326" y="117" width="5" height="15" fill="rgb(248,225,42)"/><text text-anchor="left" x="329.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (345 samples, 23.55%)</title><rect x="81" y="165" width="278" height="15" fill="rgb(239,141,15)"/><text text-anchor="left" x="84.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::Sp..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>day18::Maze::get_new_reachable_keys_cache (338 samples, 23.07%)</title><rect x="87" y="149" width="272" height="15" fill="rgb(236,130,51)"/><text text-anchor="left" x="90.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">day18::Maze::get_new_reachable_keys_..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::map::make_hash (45 samples, 3.07%)</title><rect x="323" y="133" width="36" height="15" fill="rgb(242,98,22)"/><text text-anchor="left" x="326.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">has..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::array::_$LT$impl$u20$core..hash..Hash$u20$for$u20$$u5b$T$u3b$$u20$_$u5d$$GT$::hash::hfcea7d5f5395e881 (35 samples, 2.39%)</title><rect x="331" y="117" width="28" height="15" fill="rgb(254,38,8)"/><text text-anchor="left" x="334.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">c..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (28 samples, 1.91%)</title><rect x="337" y="101" width="22" height="15" fill="rgb(244,52,33)"/><text text-anchor="left" x="340.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>[[kernel.kallsyms]] (1 samples, 0.07%)</title><rect x="401" y="117" width="1" height="15" fill="rgb(236,187,10)"/><text text-anchor="left" x="404.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___libc_malloc (27 samples, 1.84%)</title><rect x="381" y="149" width="22" height="15" fill="rgb(234,175,7)"/><text text-anchor="left" x="384.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">_..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_int_malloc (11 samples, 0.75%)</title><rect x="394" y="133" width="9" height="15" fill="rgb(229,29,0)"/><text text-anchor="left" x="397.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc_perturb (1 samples, 0.07%)</title><rect x="402" y="117" width="1" height="15" fill="rgb(247,142,42)"/><text text-anchor="left" x="405.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (87 samples, 5.94%)</title><rect x="359" y="165" width="70" height="15" fill="rgb(220,175,54)"/><text text-anchor="left" x="362.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;alloc:..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>generic_array::impls::&lt;impl core::clone::Clone for generic_array::GenericArray&lt;T,N&gt;&gt;::clone (33 samples, 2.25%)</title><rect x="403" y="149" width="26" height="15" fill="rgb(210,18,53)"/><text text-anchor="left" x="406.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">g..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 2.80%)</title><rect x="429" y="165" width="33" height="15" fill="rgb(241,146,22)"/><text text-anchor="left" x="432.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;h..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___libc_free (40 samples, 2.73%)</title><rect x="430" y="149" width="32" height="15" fill="rgb(228,121,24)"/><text text-anchor="left" x="433.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">__..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_int_free (7 samples, 0.48%)</title><rect x="457" y="133" width="5" height="15" fill="rgb(228,193,1)"/><text text-anchor="left" x="460.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___libc_free (21 samples, 1.43%)</title><rect x="462" y="165" width="17" height="15" fill="rgb(251,111,16)"/><text text-anchor="left" x="465.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_int_free (11 samples, 0.75%)</title><rect x="470" y="149" width="9" height="15" fill="rgb(241,119,36)"/><text text-anchor="left" x="473.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__rust_dealloc (1 samples, 0.07%)</title><rect x="479" y="165" width="1" height="15" fill="rgb(231,165,21)"/><text text-anchor="left" x="482.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (220 samples, 15.02%)</title><rect x="480" y="165" width="177" height="15" fill="rgb(207,184,7)"/><text text-anchor="left" x="483.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">alloc::collections::bin..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_up (1 samples, 0.07%)</title><rect x="656" y="149" width="1" height="15" fill="rgb(229,204,14)"/><text text-anchor="left" x="659.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_up (1 samples, 0.07%)</title><rect x="657" y="165" width="1" height="15" fill="rgb(227,13,28)"/><text text-anchor="left" x="660.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___libc_malloc (2 samples, 0.14%)</title><rect x="666" y="149" width="2" height="15" fill="rgb(214,22,35)"/><text text-anchor="left" x="669.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_int_malloc (2 samples, 0.14%)</title><rect x="666" y="133" width="2" height="15" fill="rgb(254,69,43)"/><text text-anchor="left" x="669.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc_perturb (1 samples, 0.07%)</title><rect x="667" y="117" width="1" height="15" fill="rgb(242,93,0)"/><text text-anchor="left" x="670.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__memcpy_avx_unaligned (2 samples, 0.14%)</title><rect x="668" y="149" width="1" height="15" fill="rgb(237,45,34)"/><text text-anchor="left" x="671.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__rdl_alloc (1 samples, 0.07%)</title><rect x="669" y="149" width="1" height="15" fill="rgb(253,118,53)"/><text text-anchor="left" x="672.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::sys::unix::alloc::&lt;impl core::alloc::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.07%)</title><rect x="669" y="133" width="1" height="15" fill="rgb(254,153,53)"/><text text-anchor="left" x="672.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__rust_alloc (1 samples, 0.07%)</title><rect x="670" y="149" width="1" height="15" fill="rgb(207,15,50)"/><text text-anchor="left" x="673.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.61%)</title><rect x="675" y="133" width="7" height="15" fill="rgb(227,192,34)"/><text text-anchor="left" x="678.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>day18::Maze::get_new_reachable_keys_cache (52 samples, 3.55%)</title><rect x="658" y="165" width="42" height="15" fill="rgb(207,213,4)"/><text text-anchor="left" x="661.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">day..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::map::make_hash (36 samples, 2.46%)</title><rect x="671" y="149" width="29" height="15" fill="rgb(206,57,24)"/><text text-anchor="left" x="674.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">ha..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::array::_$LT$impl$u20$core..hash..Hash$u20$for$u20$$u5b$T$u3b$$u20$_$u5d$$GT$::hash::hfcea7d5f5395e881 (22 samples, 1.50%)</title><rect x="682" y="133" width="18" height="15" fill="rgb(249,207,44)"/><text text-anchor="left" x="685.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (16 samples, 1.09%)</title><rect x="687" y="117" width="13" height="15" fill="rgb(224,222,12)"/><text text-anchor="left" x="690.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;nalgebra::base::matrix::Matrix&lt;N,R,C,S&gt; as core::cmp::PartialEq&gt;::eq (43 samples, 2.94%)</title><rect x="845" y="149" width="34" height="15" fill="rgb(251,173,6)"/><text text-anchor="left" x="848.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;n..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.27%)</title><rect x="879" y="149" width="4" height="15" fill="rgb(249,98,48)"/><text text-anchor="left" x="882.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___libc_free (1 samples, 0.07%)</title><rect x="883" y="149" width="0" height="15" fill="rgb(226,124,11)"/><text text-anchor="left" x="886.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_int_free (1 samples, 0.07%)</title><rect x="883" y="133" width="0" height="15" fill="rgb(206,215,34)"/><text text-anchor="left" x="886.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>free_perturb (1 samples, 0.07%)</title><rect x="883" y="117" width="0" height="15" fill="rgb(217,129,24)"/><text text-anchor="left" x="886.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (40 samples, 2.73%)</title><rect x="888" y="133" width="32" height="15" fill="rgb(235,159,42)"/><text text-anchor="left" x="891.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;s..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (157 samples, 10.72%)</title><rect x="883" y="149" width="127" height="15" fill="rgb(239,130,46)"/><text text-anchor="left" x="886.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">core::hash::imp..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::array::_$LT$impl$u20$core..hash..Hash$u20$for$u20$$u5b$T$u3b$$u20$_$u5d$$GT$::hash::hfcea7d5f5395e881 (111 samples, 7.58%)</title><rect x="920" y="133" width="90" height="15" fill="rgb(235,81,22)"/><text text-anchor="left" x="923.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">core::arra..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (101 samples, 6.89%)</title><rect x="929" y="117" width="81" height="15" fill="rgb(233,143,12)"/><text text-anchor="left" x="932.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;std::col..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>[[kernel.kallsyms]] (1 samples, 0.07%)</title><rect x="1020" y="133" width="0" height="15" fill="rgb(211,92,33)"/><text text-anchor="left" x="1023.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="1025" y="101" width="1" height="15" fill="rgb(229,106,29)"/><text text-anchor="left" x="1028.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.48%)</title><rect x="1053" y="85" width="5" height="15" fill="rgb(206,33,54)"/><text text-anchor="left" x="1056.00" y="95.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>day18::solve_dp_bfs (1,274 samples, 86.96%)</title><rect x="55" y="181" width="1026" height="15" fill="rgb(237,79,13)"/><text text-anchor="left" x="58.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">day18::solve_dp_bfs</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (473 samples, 32.29%)</title><rect x="700" y="165" width="381" height="15" fill="rgb(253,42,42)"/><text text-anchor="left" x="703.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">hashbrown::map::HashMap&lt;K,V,S&gt;::insert</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::raw::RawTable&lt;T&gt;::insert (88 samples, 6.01%)</title><rect x="1010" y="149" width="71" height="15" fill="rgb(248,121,15)"/><text text-anchor="left" x="1013.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">hashbrow..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (75 samples, 5.12%)</title><rect x="1020" y="133" width="61" height="15" fill="rgb(246,112,1)"/><text text-anchor="left" x="1023.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">hashbr..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::map::make_hash (74 samples, 5.05%)</title><rect x="1021" y="117" width="60" height="15" fill="rgb(239,180,1)"/><text text-anchor="left" x="1024.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">hashbr..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (68 samples, 4.64%)</title><rect x="1026" y="101" width="55" height="15" fill="rgb(240,137,38)"/><text text-anchor="left" x="1029.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">core:..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::array::_$LT$impl$u20$core..hash..Hash$u20$for$u20$$u5b$T$u3b$$u20$_$u5d$$GT$::hash::hfcea7d5f5395e881 (28 samples, 1.91%)</title><rect x="1058" y="85" width="23" height="15" fill="rgb(212,214,19)"/><text text-anchor="left" x="1061.00" y="95.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">c..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (23 samples, 1.57%)</title><rect x="1062" y="69" width="19" height="15" fill="rgb(238,80,7)"/><text text-anchor="left" x="1065.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_start (1,368 samples, 93.38%)</title><rect x="52" y="357" width="1102" height="15" fill="rgb(241,218,35)"/><text text-anchor="left" x="55.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">_start</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__libc_start_main (1,368 samples, 93.38%)</title><rect x="52" y="341" width="1102" height="15" fill="rgb(221,145,33)"/><text text-anchor="left" x="55.00" y="351.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">__libc_start_main</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>main (1,368 samples, 93.38%)</title><rect x="52" y="325" width="1102" height="15" fill="rgb(215,57,51)"/><text text-anchor="left" x="55.00" y="335.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">main</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::rt::lang_start_internal (1,368 samples, 93.38%)</title><rect x="52" y="309" width="1102" height="15" fill="rgb(210,9,45)"/><text text-anchor="left" x="55.00" y="319.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::rt::lang_start_internal</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::panic::catch_unwind (1,368 samples, 93.38%)</title><rect x="52" y="293" width="1102" height="15" fill="rgb(211,38,18)"/><text text-anchor="left" x="55.00" y="303.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::panic::catch_unwind</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::panicking::try (1,368 samples, 93.38%)</title><rect x="52" y="277" width="1102" height="15" fill="rgb(220,159,0)"/><text text-anchor="left" x="55.00" y="287.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::panicking::try</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__rust_maybe_catch_panic (1,368 samples, 93.38%)</title><rect x="52" y="261" width="1102" height="15" fill="rgb(246,186,23)"/><text text-anchor="left" x="55.00" y="271.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">__rust_maybe_catch_panic</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::panicking::try::do_call (1,368 samples, 93.38%)</title><rect x="52" y="245" width="1102" height="15" fill="rgb(218,60,43)"/><text text-anchor="left" x="55.00" y="255.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::panicking::try::do_call</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::rt::lang_start_internal::_$u7b$$u7b$closure$u7d$$u7d$::h3a794ed2a5cb2787 (1,368 samples, 93.38%)</title><rect x="52" y="229" width="1102" height="15" fill="rgb(253,0,21)"/><text text-anchor="left" x="55.00" y="239.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::rt::lang_start_internal::_$u7b$$u7b$closure$u7d$$u7d$::h3a794ed2a5cb2787</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::h49dc63a793f72d46 (1,368 samples, 93.38%)</title><rect x="52" y="213" width="1102" height="15" fill="rgb(221,187,29)"/><text text-anchor="left" x="55.00" y="223.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::h49dc63a793f72d46</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>day18::main (1,368 samples, 93.38%)</title><rect x="52" y="197" width="1102" height="15" fill="rgb(222,171,19)"/><text text-anchor="left" x="55.00" y="207.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">day18::main</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::fs::read_to_string::inner (91 samples, 6.21%)</title><rect x="1081" y="181" width="73" height="15" fill="rgb(217,22,46)"/><text text-anchor="left" x="1084.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::fs:..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::string::String::with_capacity (91 samples, 6.21%)</title><rect x="1081" y="165" width="73" height="15" fill="rgb(214,56,39)"/><text text-anchor="left" x="1084.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">alloc::s..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::vec::Vec&lt;T&gt;::with_capacity (91 samples, 6.21%)</title><rect x="1081" y="149" width="73" height="15" fill="rgb(210,31,28)"/><text text-anchor="left" x="1084.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">alloc::v..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (91 samples, 6.21%)</title><rect x="1081" y="133" width="73" height="15" fill="rgb(231,158,38)"/><text text-anchor="left" x="1084.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">alloc::r..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (91 samples, 6.21%)</title><rect x="1081" y="117" width="73" height="15" fill="rgb(247,135,9)"/><text text-anchor="left" x="1084.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">alloc::r..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::alloc (91 samples, 6.21%)</title><rect x="1081" y="101" width="73" height="15" fill="rgb(216,168,19)"/><text text-anchor="left" x="1084.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;alloc::..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::alloc::alloc (91 samples, 6.21%)</title><rect x="1081" y="85" width="73" height="15" fill="rgb(243,155,36)"/><text text-anchor="left" x="1084.00" y="95.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">alloc::a..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___libc_malloc (91 samples, 6.21%)</title><rect x="1081" y="69" width="73" height="15" fill="rgb(227,135,53)"/><text text-anchor="left" x="1084.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">__GI___l..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_int_malloc (91 samples, 6.21%)</title><rect x="1081" y="53" width="73" height="15" fill="rgb(213,22,49)"/><text text-anchor="left" x="1084.00" y="63.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">_int_mal..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>malloc_consolidate (91 samples, 6.21%)</title><rect x="1081" y="37" width="73" height="15" fill="rgb(220,190,16)"/><text text-anchor="left" x="1084.00" y="47.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">malloc_c..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_up (1 samples, 0.07%)</title><rect x="1154" y="357" width="1" height="15" fill="rgb(215,49,20)"/><text text-anchor="left" x="1157.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="1155" y="357" width="1" height="15" fill="rgb(252,193,0)"/><text text-anchor="left" x="1158.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::array::_$LT$impl$u20$core..hash..Hash$u20$for$u20$$u5b$T$u3b$$u20$_$u5d$$GT$::hash::hfcea7d5f5395e881 (11 samples, 0.75%)</title><rect x="1156" y="357" width="9" height="15" fill="rgb(207,213,7)"/><text text-anchor="left" x="1159.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (4 samples, 0.27%)</title><rect x="1165" y="357" width="3" height="15" fill="rgb(223,34,34)"/><text text-anchor="left" x="1168.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>day18::solve_dp_bfs (3 samples, 0.20%)</title><rect x="1168" y="357" width="2" height="15" fill="rgb(250,68,54)"/><text text-anchor="left" x="1171.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::map::make_hash (10 samples, 0.68%)</title><rect x="1170" y="357" width="8" height="15" fill="rgb(243,29,0)"/><text text-anchor="left" x="1173.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>[unknown] (1,456 samples, 99.39%)</title><rect x="12" y="373" width="1173" height="15" fill="rgb(223,84,8)"/><text text-anchor="left" x="15.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">[unknown]</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry (8 samples, 0.55%)</title><rect x="1178" y="357" width="7" height="15" fill="rgb(246,206,12)"/><text text-anchor="left" x="1181.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>[[kernel.kallsyms]] (4 samples, 0.27%)</title><rect x="1185" y="357" width="3" height="15" fill="rgb(237,152,6)"/><text text-anchor="left" x="1188.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_start (5 samples, 0.34%)</title><rect x="1185" y="373" width="4" height="15" fill="rgb(240,47,5)"/><text text-anchor="left" x="1188.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_dl_start (1 samples, 0.07%)</title><rect x="1188" y="357" width="1" height="15" fill="rgb(234,74,46)"/><text text-anchor="left" x="1191.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_dl_start_final (1 samples, 0.07%)</title><rect x="1188" y="341" width="1" height="15" fill="rgb(213,151,6)"/><text text-anchor="left" x="1191.00" y="351.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_dl_sysdep_start (1 samples, 0.07%)</title><rect x="1188" y="325" width="1" height="15" fill="rgb(227,95,39)"/><text text-anchor="left" x="1191.00" y="335.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>dl_main (1 samples, 0.07%)</title><rect x="1188" y="309" width="1" height="15" fill="rgb(238,81,33)"/><text text-anchor="left" x="1191.00" y="319.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_dl_map_object_deps (1 samples, 0.07%)</title><rect x="1188" y="293" width="1" height="15" fill="rgb(210,46,42)"/><text text-anchor="left" x="1191.00" y="303.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_dl_catch_error (1 samples, 0.07%)</title><rect x="1188" y="277" width="1" height="15" fill="rgb(228,121,53)"/><text text-anchor="left" x="1191.00" y="287.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>openaux (1 samples, 0.07%)</title><rect x="1188" y="261" width="1" height="15" fill="rgb(219,95,22)"/><text text-anchor="left" x="1191.00" y="271.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_dl_map_object (1 samples, 0.07%)</title><rect x="1188" y="245" width="1" height="15" fill="rgb(223,204,52)"/><text text-anchor="left" x="1191.00" y="255.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_dl_load_cache_lookup (1 samples, 0.07%)</title><rect x="1188" y="229" width="1" height="15" fill="rgb(220,56,40)"/><text text-anchor="left" x="1191.00" y="239.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_dl_cache_libcmp (1 samples, 0.07%)</title><rect x="1188" y="213" width="1" height="15" fill="rgb(207,195,42)"/><text text-anchor="left" x="1191.00" y="223.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>all (1,465 samples, 100%)</title><rect x="10" y="405" width="1180" height="15" fill="rgb(230,122,17)"/><text text-anchor="left" x="13.00" y="415.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>day18 (1,465 samples, 100.00%)</title><rect x="10" y="389" width="1180" height="15" fill="rgb(243,147,36)"/><text text-anchor="left" x="13.00" y="399.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">day18</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_up (1 samples, 0.07%)</title><rect x="1189" y="373" width="1" height="15" fill="rgb(253,176,18)"/><text text-anchor="left" x="1192.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g></svg>